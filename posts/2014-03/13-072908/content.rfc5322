Subject: The Future of LFE
Subtitle: 
Header-Image: 
Excerpt: 
From: oubiwann
Twitter: oubiwann
Category: 
Keywords: conferences,hoplon,erlang,lfe,clojure,lisp,erlang-factory,java
Source: https://oubiwann.blogspot.com/2014/03/the-future-of-lfe.html
Comments:
Content-Type: md
Public?: true

<div class="separator" style="clear: both; text-align: right;"><a href="http://2.bp.blogspot.com/-fonndtAAXJI/UUAGF-K1LpI/AAAAAAAAADk/YZs-7OwO608/s1600/LispFlavoredErlang-medium.png" imageanchor="1" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;"><img border="0" src="http://2.bp.blogspot.com/-fonndtAAXJI/UUAGF-K1LpI/AAAAAAAAADk/YZs-7OwO608/s1600/LispFlavoredErlang-medium.png" height="200" width="168" /></a></div><b>Erlang Factory</b><br /><br />First of all, Erlang Factory this year was just phenomenal: great talks, great energy, and none of the feared/anticipated "acquisition feeding frenzy." Instead, everyone was genuinely happy for <a href="http://www.whatsapp.com/">WhatsApp</a> and <a href="https://cloudant.com/">Cloudant</a>, and with celebrations aside, they were ready to get on with the conference and dive into the tech :-)<br /><br />And gosh, there was a bunch of good tech. If you don't believe me, check out <a href="http://www.erlang-factory.com/conference/show/conference-6/home/#programme">the schedule</a>. Also on that page are the <a href="http://www.erlang-factory.com/conference/show/conference-6/home/#speakers">speaker pics</a>. For talks that have video or slides pushed up, the speaker pic is visually annotated and linked.<br /><br />There's so much good stuff there -- I've definitely got my watching queue set up for the next few weeks ...<br /><br /><b>LFE Presentation</b><br /><br />I gave a presentation on <a href="http://lfe.github.io/">LFE</a> which covered everything from motivational basics for using a Lisp in the 21st century, gave a taste of LFE in small chunks, and then took folks on a quick tour of creating projects in LFE. There was also some dessert of fun side/research projects that are currently in-progress. The slides for the presentation are <a href="http://lfe.cogitat.io/EF-SF-2014/">here</a>; also the <a href="https://github.com/oubiwann/SFEF-2014-LFE">slide source code</a> is available (related <a href="https://github.com/oubiwann/cloudy">demo project</a>). I'd also like to give a shout out to the <a href="https://github.com/tailrecursion/hoplon">Hoplon</a> crew for their help in making sure I could create this presentation in a Lisp (Clojure), and not HTML ;-) (It uses a <a href="https://github.com/oubiwann/hoplon-reveal-js">Hoplon-based Reveal.js library</a>.)<br /><br /><div class="separator" style="clear: both; text-align: center;"><a href="http://2.bp.blogspot.com/-oEdCA8y3q10/UyEp039DXfI/AAAAAAAAAJM/iCoU4QGRGVs/s1600/marines-memorial-library.jpg" imageanchor="1" style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"><img border="0" src="http://2.bp.blogspot.com/-oEdCA8y3q10/UyEp039DXfI/AAAAAAAAAJM/iCoU4QGRGVs/s1600/marines-memorial-library.jpg" height="118" width="320" /></a></div><b>The Good Stuff</b><br /><br />After the presentation, several of us chatted about Lisp and Erlang for a while. Robert and I later continued along these lines after heading over to the quiet of the ever-cool Marines Memorial 11th-floor library (complete with fireplace). Here we sketched out some of the interesting areas for future development in LFE. I'm not sure if I'm remembering everything (I've also added stuff that we didn't discuss in the library, like Sean Chalmers' recent experiments with types; <a href="http://mankykitty.github.io/lfe/2014/03/09/lfe-type-system.html">blog</a> and <a href="https://groups.google.com/d/msg/lisp-flavoured-erlang/lM3v9L3-A1M/lFR9TevmYlwJ">discussion</a>):<br /><ul><li>getting the REPL to the point where full dev can happen (defining functions, macros, and records in the LFE shell) </li><li>adding macros (maybe just one) for easier use of Mnesia in LFE&nbsp;</li><li>discussing the possibility of an LFE stdlib </li><li>gathering some of the best funcs and macros in the wild for inclusion in an LFE stdlib</li><li>possibly supporting both <span style="font-family: &quot;Courier New&quot;,Courier,monospace;">(: module func ...)</span> and <span style="font-family: &quot;Courier New&quot;,Courier,monospace;">(module:func ...)</span> syntax </li><li>possibly getting spec and type support in LFE</li><li>producing an LFE 1.0 release</li></ul>Additional efforts planned: <br /><ul><li>building out an LFE rebar plugin</li><li>examining erlang.mk as another possible option</li><li>starting work on an LFE Cookbook</li><li>creating demos of LFE on Erjang</li><li>creating demos of LFE-Clojure interop via JInterface</li><li>creating more involved YAWS/REST examples with LFE</li><li>explore the possibility of an SOA tutorial with LFE + YAWS&nbsp;</li><li>async tasks in LFE with <span style="font-family: &quot;Courier New&quot;,Courier,monospace;">rpc</span> lib&nbsp;</li><li>monad tutorial for LFE (practical, not conceptual) </li><li>releasing a planner demo</li><li>finishing the genetic programming examples</li><li>LFE style guide</li><li>producing a stdlib contribution guideline </li><li>continued work on the LFE user guide </li></ul>I'll dump all these into <a href="https://github.com/rvirding/lfe/issues?direction=desc&amp;sort=updated&amp;state=open">github issues</a> so they'll be easier to track.<br /><br />If this stuff is exciting to you, feel free to jump into the low-volume discussions we have on the <a href="https://groups.google.com/forum/#!forum/lisp-flavoured-erlang">mail list</a>.<br /><br />More soon!<br /><br /><br />