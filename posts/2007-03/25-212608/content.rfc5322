Subject: Genshi Templates in Nevow
Subtitle: 
Header-Image: 
Excerpt: 
From: oubiwann
Twitter: oubiwann
Category: 
Keywords: 
Source: https://oubiwann.blogspot.com/2007/03/genshi-templates-in-nevow.html
Comments:
Content-Type: md
Public?: true

<strong>Update</strong>: When done reading through this example and code,
please see the most recent <a
href="http://oubiwann.blogspot.com/2008/03/genshi-on-nevow-revisited.html">blo
g post</a> about this that addresses the <a
href="http://oubiwann.blogspot.com/2008/03/genshi-on-nevow-revisited.html">dyn
amic rendering of Genshi templates in Nevow</a>.<br /><br />I have been
exploring the extensibility of Nevow, and I'm finding it surprisingly easy to
integrate other tools. I've only used <a
href="http://genshi.edgewall.org/">Genshi</a> for recent Trac hacking, but I
hear more and more about it and it seems to be gaining a little momentum as
one of the preferred template systems for python web application
developers.<br /><br />Using the <a
href="http://adytum.svn.sourceforge.net/viewvc/adytum/Docs/nevow/objectpublish
ing/introduction/">code</a> from the blog post <a
href="http://oubiwann.blogspot.com/2007/02/object-publishing-with-nevow.html">
Object Publishing with Nevow</a>, I have created an example of how to
integrate Genshi with <a
href="http://www.divmod.org/trac/wiki/DivmodNevow">Nevow</a>. I will provide a
link to the source code at the end of the post.<br /><br />Integrating another
templating system into Nevow is actually a no-brainer: you just need to have
the "alien" template parsed by its own parsers prior to Nevow performing its
parsing. This impacts only one module: <span
style="font-family:monospace;font-size:9pt;">nevow.loaders</span>.<br /><br
/>Before we dig any deeper, how about some eye-candy? Then a quick review, and
finally the code. Here are some screenshots of the Genshi templates running
along-side native Nevow templates:<br /><br /><br /><a
href="http://farm1.static.flickr.com/177/434358390_65710bc3a0_o.png" onclick="
window.open('http://farm1.static.flickr.com/177/434358390_65710bc3a0_o.png','p
opup','width=1154,height=901,scrollbars=no,resizable=yes,toolbar=no,directorie
s=no,location=no,menubar=no,status=yes,left=0,top=0');return false"><img
src="http://farm1.static.flickr.com/177/434358390_65710bc3a0_o.png" height="10
0" width="128" border="1" align="left" hspace="4" vspace="4" alt="434358390
65710Bc3A0 O" /></a><br /><a
href="http://farm1.static.flickr.com/127/434358446_df7816377a_o.png" onclick="
window.open('http://farm1.static.flickr.com/127/434358446_df7816377a_o.png','p
opup','width=1156,height=905,scrollbars=no,resizable=yes,toolbar=no,directorie
s=no,location=no,menubar=no,status=yes,left=0,top=0');return false"><img
src="http://farm1.static.flickr.com/127/434358446_df7816377a_o.png" height="10
0" width="127" border="1" hspace="4" vspace="4" alt="434358446 Df7816377A O"
/></a><br /><br />The second image is the page in the little demo that
showcases all the functionality of Genshi as documented on <a
href="http://genshi.edgewall.org/wiki/Documentation/0.3.x/xml-templates.html">
this page</a>.<br /><br />Traditionally with Nevow, <span
style="font-family:monospace;font-size:9pt;">Page</span> classes contain <span
style="font-family:monospace;font-size:9pt;">data_*()</span> and <span
style="font-family:monospace;font-size:9pt;">render_*()</span> methods. These
<span style="font-family:monospace;font-size:9pt;">Page</span> classes are
"web resources" whose <span
style="font-family:monospace;font-size:9pt;">locateChild()</span> method is
called after an HTTP GET. Each page class that will have an HTML view needs to
set a <span style="font-family:monospace;font-size:9pt;">docFactory</span>
attribute; this is the loader instance I referred to above.<br /><br />Here is
a toy example of a page class from a previous blog post:<br /><pre>from nevow
import rend<br />from nevow import loaders<br /><br />class
SiteRoot(rend.Page):<br /><br /> docFactory = loaders.xmlstr('''&lt;!DOCTYPE
html PUBLIC "-//W3C//DTD XHTML 1.0<br /> Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"&gt;<br /> &lt;html
xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en"<br />
xmlns:nevow="http://nevow.com/ns/nevow/0.1"&gt;<br /> &lt;/html&gt;''')<br
/></pre>What we need is to be able to do something link this:<br /><pre>from
nevow import rend<br /><br />import myloaders<br /><br />class
GenshiStuffResource(rend.Page):<br /><br /> docFactory =
myloaders.genshistr('''&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0<br />
Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"&gt;<br />
&lt;html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en"<br />
xmlns:nevow="http://nevow.com/ns/nevow/0.1"<br />
xmlns:genshi="http://genshi.edgewall.org/"&gt;<br /> &lt;h1&gt;Genshi
Test&lt;/h1&gt;<br /> &lt;div&gt;<br /> &lt;span genshi:with="y=7; x=y**2;
z=x+10"&gt;$x $y $z&lt;/span&gt;<br /> &lt;/div&gt;<br /> &lt;div&gt;<br />
&lt;span&gt;Your name is ${username}&lt;/span&gt;<br /> &lt;/div&gt;<br />
&lt;/html&gt;''')<br /></pre>To make this work, all we have to do is create
<span style="font-family:monospace;font-size:9pt;">myloaders.py</span> with
the following content:<br /><br /><pre>from genshi.template import
MarkupTemplate<br /><br />from nevow import inevow<br />from nevow.loaders
import xmlstr<br /><br />class genshistr(xmlstr):<br /><br /> def load(self,
ctx=None, preprocessors=()):<br /> attrs = inevow.IRenderer(ctx).__dict__<br
/> tmpl = MarkupTemplate(self.template)<br /> xmlStr =
tmpl.generate(**attrs).render('xhtml')<br /> self.template = xmlStr<br />
return super(genshistr, self).load(ctx=ctx,<br />
preprocessors=preprocessors)<br /></pre>There is a minimal amount of magic
happening here: <span
style="font-family:monospace;font-size:9pt;">MarkupTemplate.generate()</span> 
takes keywords (or a <span
style="font-family:monospace;font-size:9pt;">dict</span>, with extended call
syntax) and those key/value pairs are available to the template that is
rendered. We are using our class's <span
style="font-family:monospace;font-size:9pt;">__dict__</span> for this; so if
you want data in your template, you need to make it a class attribute. There
are many ways to do this, and you can choose the one that is safest, cleanest,
and least consumptive of resources for your application.<br /><br />This is an
example using a string as a template. The source code link below includes a
folder where the templates are broken out into files and with a <span
style="font-family:monospace;font-size:9pt;">myloaders.genshifile</span> class
defined. The screenshots above were taken from a running instance of that
example.<br /><br />Browse the example source code here: <a
href="http://adytum.svn.sourceforge.net/viewvc/adytum/Docs/nevow/templating/ge
nshi/">nevow/templating/genshi</a>.<br /><br /><!-- technorati tags start
--><p style="text-align:right;font-size:10px;">Technorati Tags: <a
href="http://www.technorati.com/tag/howto" rel="tag">howto</a>, <a
href="http://www.technorati.com/tag/nevow" rel="tag">nevow</a>, <a
href="http://www.technorati.com/tag/python" rel="tag">python</a>, <a
href="http://www.technorati.com/tag/twisted" rel="tag">twisted</a>, <a
href="http://www.technorati.com/tag/web" rel="tag">web</a></p><!-- technorati
tags end -->