Subject: Twisted SSH: Rendering a Log-in Banner/MOTD in Conch
Subtitle: 
Header-Image: 
Excerpt: 
From: oubiwann
Twitter: oubiwann
Category: 
Keywords: fixes,ssh,conch,servers,code,software,python,hacks,twisted,howtos
Source: https://oubiwann.blogspot.com/2012/05/twisted-ssh-rendering-log-in-bannermotd.html
Comments:
Content-Type: md
Public?: true

<div class="separator" style="clear: both; text-align: center;"></div><div
class="separator" style="clear: both; text-align: center;"></div><div
class="separator" style="clear: both; text-align: center;"><a
href="http://1.bp.blogspot.com/-UFw-54CdHh8/T68u-c2ePsI/AAAAAAAAAKI/52Nm1aD3me
M/s1600/2000px-Twisted_Logo_(software).png" imageanchor="1" style="clear:
right; float: right; margin-bottom: 1em; margin-left: 1em;"><img border="0"
height="200" src="http://1.bp.blogspot.com/-UFw-54CdHh8/T68u-c2ePsI/AAAAAAAAAK
I/52Nm1aD3meM/s200/2000px-Twisted_Logo_(software).png" width="188"
/></a></div>A few weeks ago, I pinged my peeps on #twisted asking why the
banner for a custom SSH server wasn't rendering properly. After some digging
around and some inconsistent results (well, consistently bad results for me),
we weren't able to resolve anything, and I had to set the problem aside.<br
/><br /><b><span style="font-size: large;">The Symptom</span></b><br />The
first thing I had tried was subclassing <span style="font-family: 'Courier
New', Courier, monospace;">Manhole</span> from <span style="font-family:
'Courier New', Courier, monospace;">twisted.conch.manhole</span>, overriding
(and up-calling) <span style="font-family: 'Courier New', Courier,
monospace;">connectionMade</span>, writing the banner to the terminal upon
successful connection. This didn't work, so I then tried overriding <span
style="font-family: 'Courier New', Courier,
monospace;">initializeScreen</span>&nbsp;by subclassing&nbsp;<span
style="font-family: 'Courier New', Courier,
monospace;">twisted.conch.recvline.RecvLine</span>. Also a no-go. And by
"didn't work" here's what I mean:<br /><br />In both Linux (Ubuntu 12.04 LTS,
gnome-terminal) and Mac (OS X 10.6.8, Terminal.app), after a successful login
to the Twisted SSH server, the following sequence would occur:<br /><ol><li>an
interactive Python prompt was rendered, e.g., ":&gt;&gt;"</li><li>the banner
was getting written to the terminal, and</li><li>the terminal screen refreshed
with the prompt at the top</li></ol><div>This all happened so quickly, that I
usually never even saw #1 and #2. Just the second ":&gt;&gt;" prompt from #3.
Only by scrolling up the terminal buffer would I see that the banner had
actually been rendered. Even though I was doing my <span style="font-family:
'Courier New', Courier, monospace;">terminal.write</span> after <span
style="font-family: 'Courier New', Courier, monospace;">connectionMade</span>
and <span style="font-family: 'Courier New', Courier,
monospace;">initializeScreen</span>, it didn't seem to matter.</div><br
/><b><span style="font-size: large;">Discovery!</span></b><br />Some time last
week, I put together example Twisted plugins showing what the problem was, and
the circumstances under which a banner simply didn't get rendered. The idea
was that I would provide some bare-bones test cases that demonstrated where
the problem was occurring, post them to IRC or the Twisted mail list, and we
could finally get it resolved. 'Cause, ya know, I really want my banners
...<br /><br />While tweaking the second Twisted plugin example, I finally
poked my head into the right method and discovered the issue. Here's what's
happening:<br /><br /><ul><li><span style="font-family: 'Courier New',
Courier, monospace;">twisted.conch.recvline.RecvLine.connectionMade</span>
calls <span style="font-family: 'Courier New', Courier,
monospace;">t.c.recvline.RecvLine.initializeScreen</span></li><li><span style=
"font-family: 'Courier New', Courier,
monospace;">t.c.recvline.RecvLine.initializeScreen</span><span style="font-fam
ily: inherit;">&nbsp;does a </span><span style="font-family: 'Courier New',
Courier, monospace;">terminal.reset</span><span style="font-family:
inherit;">, writes the prompt, and then switches to insert mode. But this is a
red herring. Since something after </span><span style="font-family: 'Courier
New', Courier, monospace;">initializeScreen</span><span style="font-family:
inherit;"> is causing the problem, we really need to be asking "who's calling
</span><span style="font-family: 'Courier New', Courier,
monospace;">connectionMade</span><span style="font-family:
inherit;">?"</span></li><li><span style="font-family: 'Courier New', Courier,
monospace;">t.c.manhole_ssh.TerminalSession.openShell</span><span style="font-
family: inherit;"> is what kicks it off when it calls the </span><span
style="font-family: 'Courier New', Courier,
monospace;">transportFactory</span><span style="font-family: inherit;"> (which
is really&nbsp;</span><span style="font-family: 'Courier New', Courier,
monospace;">TerminalSessionTransport</span>)</li><li><span style="font-family:
'Courier New', Courier, monospace;">openShell</span> takes one parameter,
<span style="font-family: 'Courier New', Courier, monospace;">proto</span> --
this is very important :-)</li><li><span style="font-family: 'Courier New',
Courier, monospace;">openShell</span> instantiates&nbsp;<span
style="font-family: 'Courier New', Courier,
monospace;">TerminalSessionTransport</span></li><li><span style="font-family:
'Courier New', Courier, monospace;">TerminalSessionTransport</span>&nbsp;does
one more thing after calling the <span style="font-family: 'Courier New',
Courier, monospace;">makeConnection</span> method on an&nbsp;<span
style="font-family: 'Courier New', Courier,
monospace;">insults.ServerProtocol</span> instance (the one I had tried
overriding without success), and as such, this is the prime suspect for what
was preventing the banner from being properly displayed: it calls &nbsp;<span
style="font-family: 'Courier New', Courier,
monospace;">chainedProtocol.terminalProtocol.terminalSize</span></li><li><span
style="font-family: 'Courier New', Courier,
monospace;">chainedProtocol</span>&nbsp;is an&nbsp;<span style="font-family:
'Courier New', Courier, monospace;">insults.ServerProtocol</span> instance,
and its <span style="font-family: 'Courier New', Courier,
monospace;">terminalProtocol</span> attribute is set when&nbsp;<span
style="font-family: 'Courier New', Courier,
monospace;">ServerProtocol.connectionMade</span>&nbsp;is called.</li><li>A
quick check reveals that&nbsp;<span style="font-family: 'Courier New',
Courier, monospace;">terminalProtocol</span>&nbsp;is none other than the <span
style="font-family: 'Courier New', Courier, monospace;">proto</span> parameter
passed to <span style="font-family: 'Courier New', Courier,
monospace;">openShell</span>.</li></ul><br />But what <i>is</i> <span
style="font-family: 'Courier New', Courier, monospace;">proto</span>? Some
debugging (and the fact that of the three <span style="font-family: 'Courier
New', Courier, monospace;">terminalSize</span> methods in all of twisted, only
one is an actual implementation) reveals that <span style="font-family:
'Courier New', Courier, monospace;">proto</span> is a&nbsp;<span
style="font-family: 'Courier New', Courier, monospace;">RecvLine</span>
instance. Reading that method uncovers the culprit in our whodunnit: &nbsp;the
first thing the method does is call <span style="font-family: 'Courier New',
Courier, monospace;">terminal.eraseDisplay</span>.<br /><br />Bingo! (And this
is what I was referring to above when I said "poked my head" ...)<br /><br
/>Since this was called after all of my attempts to display a banner using
both <span style="font-family: 'Courier New', Courier,
monospace;">connectionMade</span> and <span style="font-family: 'Courier New',
Courier, monospace;">initializeScreen</span>, there's no way my efforts would
have succeeded.<br /><br /><b><span style="font-size: large;">Here's What You
Do</span></b><br />How do you get around this? Easy! Subclass :-)<br /><br
/>The class &nbsp;<span style="font-family: 'Courier New', Courier,
monospace;">TerminalSessionTransport</span>&nbsp;in <span style="font-family:
'Courier New', Courier, monospace;">t.c.manhole_ssh</span>&nbsp;is the bad boy
that calls <span style="font-family: 'Courier New', Courier,
monospace;">terminalSize</span> (which calls <span style="font-family:
'Courier New', Courier, monospace;">eraseDisplay</span>). It's the last thing
that&nbsp;<span style="font-family: 'Courier New', Courier,
monospace;">TerminalSessionTransport</span>&nbsp;does in its <span
style="font-family: 'Courier New', Courier, monospace;">__init__</span>, so if
we subclass it, and render our banner at the end of our <span
style="font-family: 'Courier New', Courier, monospace;">__init__</span>, we
should be golden. And we are :-)<br /><br /><div class="separator"
style="clear: both; text-align: center;"><a
href="http://3.bp.blogspot.com/-rkj5zKv34qo/T7Ej7FRUKAI/AAAAAAAAAKU/v9EGXJwQu4
o/s1600/Screenshot+from+2012-05-14+11:21:43.png" imageanchor="1"
style="margin-left: 1em; margin-right: 1em;"><img border="0" height="230"
src="http://3.bp.blogspot.com/-rkj5zKv34qo/T7Ej7FRUKAI/AAAAAAAAAKU/v9EGXJwQu4o
/s400/Screenshot+from+2012-05-14+11:21:43.png" width="400" /></a></div>You can
see an example of this <a
href="https://github.com/dreamhost/dreamssh/blob/master/dreamssh/shell/base.py
#L74" target="_blank">here</a>.<br /><br />Not sure if this sort of thing is
better off in projects that make use of Twisted, or if it would be worth while
to add this feature to Twisted itself. Time (and blog comments) will tell.<br
/><br /><b><span style="font-size: large;">Epilogue</span></b><br />As is
evident from the screenshot above (and the link), this feature is part of the
<a href="https://github.com/dreamhost/dreamssh" target="_blank">DreamSSH</a>
project. There are a handful of other nifty features/shortcuts that I have
implemented in DreamSSH&nbsp;(plus some cool ones that are coming)&nbsp;and
I'm using them in projects that need a custom SSH server. I released the <a
href="http://pypi.python.org/pypi/DreamSSH" target="_blank">first version of
DreamSSH</a> last night, and there's a pretty clear README on the github
project page.<br /><br />One of the niftier things I did last night in
preparation for the release was to dig into Twisted plugins and override some
behaviour there. In order to make sure that the conveniences I had provided
for devs with the Makefile were available for anyone who had DreamSSH
installed, I added subcommands... but if the service was already running,
these would fail. How to work around that (and other Twisted plugin tidbits)
are probably best saved for another post, though :-)<br /><br /><br />