Subject: A Sinfonia on Messaging with txAMQP, Part II
Subtitle: 
Header-Image: 
Excerpt: 
From: oubiwann
Twitter: oubiwann
Category: 
Keywords: messaging,amqp,business,txamqp-sinfonia,architecture
Source: https://oubiwann.blogspot.com/2009/06/sinfonia-on-messaging-with-txamqp-part.html
Comments:
Content-Type: md
Public?: true

<div><br /><span style="font-weight: bold;">A Sinfonia on Messaging:</span><br
/><ol><li><a href="http://oubiwann.blogspot.com/2009/06/sinfonia-on-messaging-
with-txamqp.html">The Voice of Business</a><br /></li><li><a
href="http://oubiwann.blogspot.com/2009/06/sinfonia-on-messaging-with-txamqp-p
art.html">The Voice of Architecture</a></li><li><a
href="http://oubiwann.blogspot.com/2009/06/sinfonia-on-messaging-with-txamqp-p
art_18.html">A RabbitMQ and txAMQP Interlude</a></li></ol><br />After writing
the last blog post, I found a <a
href="http://www.enterpriseintegrationpatterns.com/">fantastic site</a> that
focuses on messaging in the enterprise. I have really enjoyed the big-picture
overview I get from some of the Martin Fowler signature books in this series,
so I ordered <a
href="http://amazon.com/o/asin/0321200683/ref=nosim/enterpriseint-20">a copy
of this one</a> too.<br /><br />On the web site, the authors give a nice
example for messaging integration in <a
href="http://www.enterpriseintegrationpatterns.com/Chapter1.html">Chapter 1</a
>. They provide a more detailed, supplier-version of the kilt store (we're
doing "manufacturing" as opposed to distribution) with "Widget-Gadget Corp",
but the basic principles are the same. I highly recommend reading that entire
page. I used it as the basis for much of this post.<br /><br /><br /><span
style="font-weight: bold;">Business Process Overview</span><br /><br />At a
top-level, we have the following business process for MacGrudder's kilt
store:<br /><br /><img
src="http://farm3.static.flickr.com/2468/3616902471_976fb0bbc7_o.png" style="b
order: medium none ;" /><br /><br />These are represented by a sales guy or a
web store, a third-party billing service, MacGrudder, and a third-party
shipping service.<br /><br />Up until now, the sale process could be either a
user deciding to buy something in the online store or the sales guy engaging
with a customer. Both generated orders; neither shared resources. The web app
interfaced with the payment gateway operating by billing/shipping guy. The
sales guy had to call in his orders to the billing/shipping guy. Once orders
were charged/approved, a printout was handed to MacGrudder, who then created
the ordered kilt. Once completed, he'd set it aside for shipping guy to come
box it up and slap a label on it.<br /><br /><br /><span style="font-weight:
bold;">The Voice of Architecture</span><br /><br />We're now ready to weave in
the second voice of our <a
href="http://en.wikipedia.org/wiki/Inventions_and_Sinfonias_%28J._S._Bach%29">
three-part invention</a>. MacGrudder's original infrastructure consists of
silos of applications, functionality, data, and process. We want to
interconnect these separated areas in order to reduce long-term overhead
incurred by redundant components and data. Practically, we want to see the
following changes:<br /><br /><br /><a onblur="try
{parent.deselectBloggerImageGracefully();} catch(e) {}"
href="http://farm4.static.flickr.com/3662/3618180544_e906571e0f_o.png"><img st
yle="border: 0pt none ; margin: 0pt 10px 10px 0pt; float: left; cursor:
pointer; width: 240px; height: 137px;"
src="http://farm4.static.flickr.com/3662/3618180544_b5ca784ed1_m.jpg" alt=""
border="0" /></a><span style="font-weight: bold;"><span
style="font-size:85%;">Unified orders</span></span>: at the end of the sales
process, there should be one abstraction of the "order", regardless if the
source was the web store, a phone call, or the sales guy. The order
abstraction will be a message (or series of messages, for orders with multiple
items; we'll be addressing only the simple case of a single item).<br /><br
/><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}"
href="http://farm3.static.flickr.com/2441/3618361660_7b40df1bf9_o.png"><img st
yle="border: 0pt none ; margin: 0pt 10px 10px 0pt; float: right; cursor:
pointer; width: 240px; height: 137px;"
src="http://farm3.static.flickr.com/2441/3618361660_ca06012474_m.jpg" alt=""
border="0" /></a><span style="font-size:85%;"><span style="font-weight:
bold;"><br />Unified validation and billing</span></span>: at the end of the
order creation process, there should be a validated order or an invalid order
(e.g., if there were insufficient funds). At the end of the billing process,
there should be an approved order that has be paid for via a single means
(e.g., a single payment gateway, without bothering billing guy for manual
entry). Additionally, once an order has been validated, messages should be
sent to other components in the system.<br /><br /><br /><a onblur="try
{parent.deselectBloggerImageGracefully();} catch(e) {}"
href="http://farm4.static.flickr.com/3299/3618662706_574433f920_o.png"><img st
yle="border: 0pt none ; margin: 0pt 10px 10px 0pt; float: left; cursor:
pointer; width: 240px; height: 137px;"
src="http://farm4.static.flickr.com/3299/3618662706_d0aebb491b_m.jpg" alt=""
border="0" /></a><span style="font-size:85%;"><span style="font-weight:
bold;">Unified status</span></span>: at the end of the manufacturing process,
both the shipping guy and customers should be aware that the product has been
completed and is ready to be sent: the shipping guy can connect to our
messaging system (probably via a service) and the customer can be notified by
email or by checking the order status in the web kilt store.<br /><br /><br
/>In the next installment, we will finally start looking at the code. We'll
look at the "unified orders" messaging solution after covering some basics
with RabbitMQ and Twisted integration, and then see how far we get with
implementation details and descriptions. Unified validation, billing, and
status might have to be pushed to additional posts.<br /><br /><br /><span
style="font-weight: bold;">References</span><br /><ul><li>Enterprise
Integration Patterns, <a
href="http://www.enterpriseintegrationpatterns.com/Chapter1.html">Chapter 1</a
></li><li><a href="http://www.soa-in-practice.com/">SOA in
Practice</a></li></ul><br /><br /><br /></div>