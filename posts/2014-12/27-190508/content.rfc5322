Subject: Improved Python Support in Erlang/LFE
Subtitle: 
Header-Image: 
Excerpt: 
From: oubiwann
Twitter: oubiwann
Category: 
Keywords: erlang,lfe,distributed systems,erlport,python,lisp,python 3
Source: https://oubiwann.blogspot.com/2014/12/improved-python-support-in-erlanglfe.html
Comments:
Content-Type: md
Public?: true

<div class="separator" style="clear: both; text-align: center;"><a href="http://3.bp.blogspot.com/-zy-5C5YOuL0/VJ9S41LIJGI/AAAAAAAAAU8/OPSzaGjgjF8/s1600/Python-logo-notext.png" imageanchor="1" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;"><img border="0" src="http://3.bp.blogspot.com/-zy-5C5YOuL0/VJ9S41LIJGI/AAAAAAAAAU8/OPSzaGjgjF8/s1600/Python-logo-notext.png" height="200" width="200" /></a></div>The <a href="http://technicae.cogitat.io/2014/11/erlport-using-python-from-erlanglfe.html">previous post on Python support in Erlang/LFE</a> made Hacker News this week, climbing in fits and starts to #19 on the front page. That resulted in the biggest spike this blog has seen in several months.<br /><br />It's a shame, in a way, since it came a few days too early: there's a new library out for the Erlang VM (written in LFE) which makes it much easier to use Python from Erlang (the language from Sweden that's <a href="https://www.youtube.com/watch?v=rRbY3TMUcgQ">famous for impressing both your mum and your cats</a>).<br /><br />The library is simply called <a href="https://github.com/lfex/py">py</a>. It's a wrapper for <a href="http://erlport.org/">ErlPort</a>, providing improved usability for Python-specific code as well as an Erlang process supervision tree for the ErlPort Python server.&nbsp;It has an extensive README that not only does the usual examples with LFE, but gives a full <a href="https://github.com/lfex/py#erlang-">accounting of usage</a> in the more common Prolog-inspired syntax Erlang. The <a href="http://blog.lfe.io/announcements/2014/12/27/1641-easy-python-from-lfeerlang/">LFE Blog</a> has a new post with code examples as well as a demonstration of the py supervision tree (e.g., killing Python server processes and having them restart automatically) which hasn't actually made it into the README yet -- so get it while it's hot!<br /><br />The most exciting bits are yet to come: <a href="https://github.com/lfex/py/issues">there are open tickets</a> for:<br /><ul><li>work on multiple Python server processes</li><li>scheduling code execution to these, and</li><li>full Python distribution infrastructure with parallel execution.</li></ul><div>This could drastically change the picture for compute-intensive tasks in Erlang, Elixir, LFE, and Joxa. The Erlang VM was never intended to excel at the sort of problems that Python has traditionally focused on... yet it provides the sort of infrastructure that the Python community has been agonizing over for more than a decade. For Pythonistas, this may not be a very big deal ... but for the Erlang and functional programming communities, the <a href="https://github.com/lfex/py">LFE py</a> project could be a life-saver for any number of projects which need easy-access to the strengths of Python.</div><div><br /></div><div><br /></div>